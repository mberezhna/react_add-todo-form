{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","InitialTodos","App","useState","setTodos","titleError","selectError","errors","setErrors","setTitle","select","setSelect","action","method","onSubmit","event","preventDefault","trim","length","prev","newTodo","reduce","max","Number","htmlFor","type","placeholder","value","onChange","e","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed52d417.chunk.js","sourcesContent":["import { User } from '../Types/User';\n\nexport type UserInfoProps = {\n  user: User\n};\n\nexport const UserInfo = ({ user } : UserInfoProps) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\nexport type TodoInfoProps = {\n  todo: Todo\n};\n\nexport const TodoInfo = ({ todo }: TodoInfoProps) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo', completed && 'TodoInfo--completed',\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\nexport type TodoListProps = {\n  todos: Todo[]\n};\n\nexport const TodoList = ({ todos }: TodoListProps) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/Types/Todo';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUser = (userId: number) => {\n  return usersFromServer.find((user) => user.id === userId);\n};\n\nconst InitialTodos = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport type Errors = {\n  titleError: boolean\n  selectError: boolean\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(InitialTodos);\n  const [errors, setErrors] = useState<Errors>({\n    titleError: false,\n    selectError: false,\n  });\n\n  const [title, setTitle] = useState<string>('');\n  const [select, setSelect] = useState<string>('0');\n\n  const handleTitleChange = (value: string) => {\n    setTitle(() => value);\n\n    setErrors((prev) => ({\n      ...prev,\n      titleError: false,\n    }));\n  };\n\n  const changeSelect = (value: string) => {\n    setSelect(() => value);\n\n    setErrors((prev) => ({\n      ...prev,\n      selectError: false,\n    }));\n  };\n\n  const addTodo = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title.trim().length === 0) {\n      setErrors((prev) => ({\n        ...prev,\n        titleError: true,\n      }));\n    }\n\n    if (select === '0') {\n      setErrors((prev) => ({\n        ...prev,\n        selectError: true,\n      }));\n    }\n\n    if (title.trim().length > 0 && select !== '0') {\n      const maxId = todos.reduce((max, todo) => (\n        todo.id > max ? todo.id : max), 0);\n\n      const newTodo: Todo = {\n        id: maxId + 1,\n        title: title.trim(),\n        completed: false,\n        userId: Number(select),\n        user: getUser(Number(select)),\n      };\n\n      setTodos((prev) => ([\n        ...prev, newTodo]\n      ));\n      setTitle('');\n      setSelect('0');\n      setErrors(() => ({\n        titleError: false,\n        selectError: false,\n      }));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInputId\">\n            Title:\n            {' '}\n            <input\n              id=\"titleInputId\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={(e) => handleTitleChange(e.target.value)}\n            />\n          </label>\n          {errors.titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelectId\">\n            Select user:\n            {' '}\n            <select\n              id=\"userSelectId\"\n              data-cy=\"userSelect\"\n              value={select}\n              onChange={(e) => changeSelect(e.target.value)}\n            >\n\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((user) => (\n                <option value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {errors.selectError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}