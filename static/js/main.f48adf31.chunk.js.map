{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","userInfo","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","initialTodos","App","useState","setTodos","titleError","selectError","errors","setErrors","inputTitle","setInputTitle","selectedUserId","setSelectedUserId","action","method","onSubmit","event","preventDefault","trim","length","prev","newTodo","reduce","max","Number","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f48adf31.chunk.js","sourcesContent":["import { User } from '../Types/User';\n\nexport type UserInfoPropsType = {\n  user: User\n};\n\nexport const UserInfo = ({ user }: UserInfoPropsType) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\nexport type TodoInfoProps = {\n  todo: Todo\n};\n\nexport const TodoInfo = ({ todo }: TodoInfoProps) => {\n  const {\n    id, title, completed, user: userInfo,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo', { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {userInfo && (\n        <UserInfo user={userInfo} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\nexport type TodoListPropsType = {\n  todos: Todo[]\n};\n\nexport const TodoList = ({ todos }: TodoListPropsType) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/Types/Todo';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport type Errors = {\n  titleError: boolean\n  selectError: boolean\n};\n\nconst getUserById = (userId: number) => {\n  return usersFromServer.find((user) => user.id === userId);\n};\n\nconst initialTodos = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n  const [errors, setErrors] = useState<Errors>({\n    titleError: false,\n    selectError: false,\n  });\n  const [inputTitle, setInputTitle] = useState<string>('');\n  const [selectedUserId, setSelectedUserId] = useState<string>('0');\n\n  const onTitleChange = (value: string) => {\n    setInputTitle(value);\n\n    setErrors((prev) => ({\n      ...prev,\n      titleError: false,\n    }));\n  };\n\n  const onSelectChange = (value: string) => {\n    setSelectedUserId(value);\n\n    setErrors((prev) => ({\n      ...prev,\n      selectError: false,\n    }));\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (inputTitle.trim().length === 0) {\n      setErrors((prev) => ({\n        ...prev,\n        titleError: true,\n      }));\n    }\n\n    if (selectedUserId === '0') {\n      setErrors((prev) => ({\n        ...prev,\n        selectError: true,\n      }));\n    }\n\n    if (inputTitle.trim().length > 0 && selectedUserId !== '0') {\n      const maxId = todos.reduce((max, todo) => (\n        todo.id > max ? todo.id : max), 0);\n\n      const newTodo: Todo = {\n        id: maxId + 1,\n        title: inputTitle.trim(),\n        completed: false,\n        userId: Number(selectedUserId),\n        user: getUserById(Number(selectedUserId)),\n      };\n\n      setTodos((prev) => (\n        [\n          ...prev,\n          newTodo,\n        ]\n      ));\n      setInputTitle('');\n      setSelectedUserId('0');\n      setErrors(() => ({\n        titleError: false,\n        selectError: false,\n      }));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInputId\">\n            Title:\n            {' '}\n            <input\n              id=\"titleInputId\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Title\"\n              value={inputTitle}\n              onChange={(event) => onTitleChange(event.target.value)}\n            />\n          </label>\n          {errors.titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelectId\">\n            Select user:\n            {' '}\n            <select\n              id=\"userSelectId\"\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={(event) => onSelectChange(event.target.value)}\n            >\n\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((user) => (\n                <option value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {errors.selectError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}